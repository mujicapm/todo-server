{"version":3,"sources":["HandleDate.js","Reducers.js","User/Register.js","User/Login.js","User/UserBar.js","ToDos/CreateToDoItem.js","Header.js","pages/HeaderBar.js","ToDos/ToDoItem.js","ToDos/ToDoList.js","pages/HomePage.js","pages/ToDoPage.js","App.js","index.js","User/Logout.js","Contexts.js"],"names":["handleDateCreated","intlFormat","Date","now","year","month","day","userReducer","state","action","type","username","access_token","undefined","toDoReducer","id","title","description","dateCreated","isComplete","dateComplete","map","toDoItem","filter","ToDoItems","appReducer","user","Register","show","handleClose","dispatch","useContext","StateContext","useState","password","passwordRepeat","formData","setFormData","setStatus","useResource","url","method","data","register","useEffect","isLoading","error","console","log","alert","Modal","onHide","Form","onSubmit","e","preventDefault","Header","closeButton","Title","Body","Label","htmlFor","Control","value","onChange","target","name","Footer","Button","variant","onClick","disabled","length","Login","setUsername","setPassword","loginFailed","setLoginFailed","login","evt","Text","style","color","UserBar","Logout","React","lazy","showLogin","setShowLogin","showRegister","setShowRegister","className","CreatePost","setTitle","setDescription","setDateCreated","headers","ToDoItem","putToDoItem","navigation","useNavigation","handleSubmit","navigate","rows","cols","text","href","Navbar","Brand","HeaderBar","bg","expand","Container","Toggle","Collapse","Nav","Link","Suspense","fallback","short","encodeURI","deleteToDoItem","toggleToDo","processedContent","substring","Card","checked","ToDoList","p","i","key","HomePage","getToDoItems","TodoPage","getToDoItem","App","useReducer","routes","mount","route","view","req","params","Provider","axiosInstance","axios","create","baseURL","ReactDOM","render","StrictMode","document","getElementById","createContext"],"mappings":"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","file":"static/js/main.f3735194.chunk.js","sourcesContent":["import { intlFormat } from \"date-fns\";\n\nexport default function handleDateCreated() {\n    const tmpDate = intlFormat(Date.now(), {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\",\n    });\n    return tmpDate;\n}","import handleDateCreated from \"./HandleDate\";\n\nfunction userReducer(state, action) {\n    switch (action.type) {\n        case \"LOGIN\":\n        case 'REGISTER':\n            return {\n                'username': action.username,\n                'access_token': action.access_token\n            }\n        case 'LOGOUT':\n            return {\n                'username': undefined,\n                'access_token': undefined\n            }\n        default:\n            return state;\n    }\n}\n\nfunction toDoReducer(state, action) {\n    switch (action.type) {\n        case \"CREATE_TODO\":\n            const newPost = {\n                id: action.id,\n                title: action.title,\n                description: action.description,\n                dateCreated: action.dateCreated,\n                isComplete: action.isComplete,\n                dateComplete: action.dateComplete\n            };\n            return [newPost, ...state];\n        case \"TOGGLE_TODO\":\n            if (action.isComplete) {\n                return state.map((toDoItem) =>\n                    toDoItem.id === action.id\n                        ? {\n                            ...toDoItem,\n                            isComplete: action.isComplete,\n                            dateComplete: handleDateCreated(),\n                        }\n                        : toDoItem\n                );\n            } else {\n                return state.map((toDoItem) =>\n                    toDoItem.id === action.id\n                        ? {\n                            ...toDoItem,\n                            isComplete: action.isComplete,\n                            dateComplete: null,\n                        }\n                        : toDoItem\n                );\n            }\n\n\n            // return state.map((ToDoItem, id) => {\n            //     if(id === action.id) {\n            //         ToDoItem.isComplete = action.isComplete;\n            //         ToDoItem.dateComplete = handleDateCreated();\n            //         console.log(ToDoItem)\n            //     }\n            //     return ToDoItem;\n            // })\n        case \"DELETE_TODO\":\n            const newList = state.filter(\n                (toDoItem) => toDoItem.id !== action.id\n            );\n            return newList;\n        case 'FETCH_POSTS':\n            return action.ToDoItems\n        default:\n            return state;\n    }\n}\n\nexport default function appReducer (state, action) {\n    return {\n        user: userReducer(state.user, action),\n        ToDoItems: toDoReducer(state.ToDoItems, action)\n    }\n}","import React, {useState, useContext, useEffect} from \"react\";\nimport { StateContext } from '../Contexts';\nimport {useResource} from \"react-request-hook\";\nimport {Form, Modal, Button} from 'react-bootstrap';\n\nexport default function Register({show, handleClose}) {\n    const {dispatch} = useContext(StateContext);\n\n    const [ formData, setFormData ] = useState({\n        username: \"\",\n        password: \"\",\n        passwordRepeat: \"\"\n    })\n\n    const [ status, setStatus] = useState(\"\")\n\n    const [ user, register ] = useResource((username, password) => ({\n        url: '/auth/register',\n        method: 'post',\n        data: { username, password, 'passwordConfirmation': password }\n    }))\n\n\n    useEffect(() => {\n        if (user && user.data) {\n            dispatch({type: \"REGISTER\", username: user.data.username});\n        }\n    }, [user])\n\n    useEffect(() => {\n        if (user && user.isLoading === false && (user.data || user.error)) {\n            if (user.error) {\n                console.log(user)\n                setStatus(\"Registration failed, please try again later.\")\n                alert(\"fail\")\n            } else {\n                console.log(user)\n                setStatus(\"Registration successful. You may now login.\")\n                alert(\"success\")\n            }\n            //dispatch({ type: 'REGISTER', username: user.data.username })\n        }\n    }, [user])\n\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n        <Form\n            onSubmit={(e) => {\n                e.preventDefault();\n                register(formData.username, formData.password);\n                handleClose();\n            }}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Register</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Form.Label htmlFor=\"register-username\">Username:</Form.Label>\n            <Form.Control\n                type=\"text\"\n                value={formData.username}\n                onChange={e => setFormData({...formData, username: e.target.value})}\n                name=\"register-username\"\n                id=\"register-username\"\n            />\n\n            <Form.Label htmlFor=\"register-password\">Password:</Form.Label>\n            <Form.Control\n                type=\"password\"\n                value={formData.password}\n                onChange={e => setFormData({...formData, password: e.target.value})}\n                name=\"register-password\"\n                id=\"register-password\"\n            />\n\n            <Form.Label htmlFor=\"register-password-repeat\">Repeat password:</Form.Label>\n            <Form.Control\n                type=\"password\"\n                value={formData.passwordRepeat}\n                onChange={e => setFormData({...formData, passwordRepeat: e.target.value})}\n                name=\"register-password-repeat\"\n                id=\"register-password-repeat\"\n            />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\n                <Button variant=\"primary\" type=\"submit\" disabled={formData.username.length === 0 || formData.password.length === 0 || formData.password !== formData.passwordRepeat}>Register</Button>\n            </Modal.Footer>\n        </Form>\n        </Modal>\n    );\n}\n\n","// import React, {useState, useContext, useEffect} from \"react\";\n// import { StateContext } from '../Contexts';\n// import {useResource} from \"react-request-hook\";\n// import { Modal, Form, Button } from 'react-bootstrap';\n//\n// export default function Login({show, handleClose}) {\n//     const {dispatch} = useContext(StateContext);\n//     const [username, setUsername] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [loginFailed, setLoginFailed] = useState(false);\n//\n//     function handleUsername(evt) {setUsername(evt.target.value)}\n//     function handlePassword(evt) {setPassword(evt.target.value)}\n//\n//     const [ user, login ] = useResource((username, password) => ({\n//         url: 'auth/login',\n//         method: 'post',\n//         data: {username, password}\n//     }))\n//\n//     useEffect(() => {\n//         if (user && user.isLoading === false && (user.data || user.error)) {\n//             if (user.error) {\n//                 setLoginFailed(true)\n//                 alert('failed')\n//             } else {\n//                 setLoginFailed(false)\n//                 console.log(user.data)\n//                 dispatch({ type: 'LOGIN', username, access_token: user.data.access_token })\n//             }\n//         }\n//     }, [user])\n//\n//     return (\n//         <Modal show={show} onHide={handleClose}>\n//         <Form\n//             onSubmit={(evt) => {\n//                 evt.preventDefault();\n//                 login(username, password);\n//                 handleClose();\n//             }}\n//         >\n//         <Modal.Header closeButton>\n//             <Modal.Title>Login</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//             <Form.Label htmlFor=\"login-username\">Username:</Form.Label>\n//             <Form.Control type=\"text\" name=\"login-username\" value={username} onChange={handleUsername} id=\"login-username\"/>\n//             <Form.Label htmlFor=\"login-password\">Password:</Form.Label>\n//             <Form.Control type=\"password\" name=\"login-password\" value={password} onChange={handlePassword} id=\"login-password\" />\n//                 {loginFailed && <Form.Text style={{ color: 'red' }}>Invalid username or password</Form.Text>}\n//         </Modal.Body>\n//         <Modal.Footer>\n//             <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\n//             <Button variant=\"primary\" disabled={username.length === 0} type=\"submit\">Login</Button>\n//         </Modal.Footer>\n//         </Form>\n//         </Modal>\n//     );\n// }\n\nimport React, {useState, useEffect, useContext} from 'react'\n\nimport { StateContext } from '../Contexts';\nimport { useResource } from 'react-request-hook';\n\nimport { Modal, Form, Button } from 'react-bootstrap';\n\nexport default function Login({show, handleClose}) {\n\n    const {dispatch} = useContext(StateContext)\n\n    const [username, setUsername] = useState('');\n    const [ password, setPassword ] = useState('')\n    const [ loginFailed, setLoginFailed ] = useState(false)\n\n    function handleUsername (evt) { setUsername(evt.target.value) }\n    function handlePassword (evt) { setPassword(evt.target.value) }\n\n    const [ user, login ] = useResource((username, password) => ({\n        url: 'auth/login',\n        method: 'post',\n        data: {username, password}\n    }))\n\n\n\n    useEffect(() => {\n        if (user && user.isLoading === false && (user.data || user.error)) {\n            if (user.error) {\n                setLoginFailed(true)\n                alert('failed')\n            } else {\n                setLoginFailed(false)\n                console.log(user.data)\n                dispatch({ type: 'LOGIN', username, access_token: user.data.access_token })\n            }\n        }\n    }, [user])\n\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Form onSubmit={e => { e.preventDefault(); login(username, password); handleClose() }}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Login</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Label htmlFor=\"login-username\">Username:</Form.Label>\n                    <Form.Control type=\"text\" value={username} onChange={handleUsername} name=\"login-username\" id=\"login-username\" />\n                    <Form.Label htmlFor=\"login-password\">Password:</Form.Label>\n                    <Form.Control type=\"password\" value={password} onChange={handlePassword} name=\"login-password\" id=\"login-password\" />\n                    {loginFailed && <Form.Text style={{ color: 'red' }}>Invalid username or password</Form.Text>}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\n                    <Button variant=\"primary\" disabled={username.length === 0} type=\"submit\">Login</Button>\n                </Modal.Footer>\n            </Form>\n        </Modal>\n\n    )\n}\n\n","import React, {useContext, useState} from \"react\";\nimport Logout from \"./Logout\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport { StateContext } from '../Contexts';\nimport {Button} from 'react-bootstrap'\n\nexport default function UserBar() {\n\n    const Logout = React.lazy(() => import('./Logout'))\n    const{state} = useContext(StateContext);\n\n    const [showLogin, setShowLogin] = useState(false)\n    const [showRegister, setShowRegister] = useState(false)\n\n    if (state.user.username) {\n        return <Logout />\n    } else {\n        return (\n\n            <div className=\"justify-content-end\">\n                <Button variant=\"link\" onClick={(e) => setShowLogin(true)}>\n                    Login\n                </Button>\n                <Login show={showLogin} handleClose={() => setShowLogin(false)} />\n                <Button variant=\"link\" onClick={(e) => setShowRegister(true)}>\n                    Register\n                </Button>\n                <Register show={showRegister} handleClose={() => setShowRegister(false)} />\n            </div>\n\n\n        )\n    }\n}","import React, {useState, useContext, useEffect} from \"react\";\nimport handleDateCreated from \"../HandleDate\";\nimport { StateContext } from '../Contexts';\nimport {useResource} from \"react-request-hook\";\nimport { useNavigation } from \"react-navi\";\n\n\nexport default function CreatePost({}) {\n    const{state, dispatch} = useContext(StateContext);\n\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [dateCreated, setDateCreated] = useState(\"\");\n    const isComplete = false;\n    const dateComplete = null;\n\n    const [ ToDoItem, putToDoItem ] = useResource(({title, description, dateCreated, isComplete, dateComplete}) => ({\n        url: '/todo',\n        method: 'post',\n        headers: {\"Authorization\": `${state.user.access_token}`},\n        data:\n            {\n                title,\n                description,\n                dateCreated,\n                isComplete,\n                dateComplete,\n            }\n    }))\n\n    const navigation = useNavigation()\n\n    function handleTitle(evt) {\n        setTitle(evt.target.value);\n    }\n    function handleDescription(evt) {\n        setDescription(evt.target.value);\n    }\n    function handleOnClick() {\n        setDateCreated(handleDateCreated());\n    }\n\n    function handleCreate() {\n        putToDoItem({title, description, dateCreated, isComplete, dateComplete})\n    }\n\n    useEffect(() => {\n        if (ToDoItem && ToDoItem.data) {\n            dispatch({type: \"CREATE_TODO\", id: ToDoItem.data.id, title: ToDoItem.data.title, description: ToDoItem.data.description, dateCreated: ToDoItem.data.dateCreated, isComplete: ToDoItem.data.isComplete, dateComplete: ToDoItem.data.dateComplete});\n            console.log(ToDoItem.data)\n            navigation.navigate(`/todo/${ToDoItem.data.id}`)\n        }\n    }, [ToDoItem])\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        handleCreate();\n        setTitle(\"\");\n        setDescription(\"\");\n    }\n\n    return (\n        <form\n            onSubmit={(e) => {\n                handleSubmit(e);\n            }}\n        >\n            <div>\n                <label htmlFor=\"create-title\">Title:</label>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={handleTitle}\n                    name=\"create-title\"\n                    id=\"create-title\"\n                />\n            </div>\n            <div>\n                <label htmlFor=\"create-description\">Description:</label>\n                <input\n                    type=\"textarea\"\n                    value={description}\n                    onChange={handleDescription}\n                    name=\"create-description\"\n                    id=\"create-description\"\n                    rows=\"5\"\n                    cols=\"33\"\n                />\n            </div>\n            <input\n                type=\"submit\"\n                value=\"Create\"\n                onClick={handleOnClick}\n                name=\"create\"\n            />\n        </form>\n    );\n}","import React, {useContext} from 'react'\nimport { Navbar } from 'react-bootstrap'\n\nimport { Link } from 'react-navi'\n\nconst Header = ({text}) => {\n    return <Link href=\"/\"><Navbar.Brand>{text}</Navbar.Brand></Link>\n}\n\nexport default Header","import React, {useContext} from 'react'\nimport {Container, Navbar, Nav} from \"react-bootstrap\";\nimport UserBar from \"../User/UserBar\";\nimport CreateToDoItem from \"../ToDos/CreateToDoItem\";\nimport {StateContext} from \"../Contexts\";\nimport {Link} from \"react-navi\";\nimport Header from \"../Header\";\n\n\nexport default function HeaderBar () {\n\n    const {state} = useContext(StateContext);\n    const {user} = state;\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Container>\n                <Navbar.Brand href=\"/\"><Header text=\"My ToDos\" /></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        {user.username && <Nav.Link><Link href=\"/todo/create\">Create New Task</Link></Nav.Link>}\n                    </Nav>\n                    <React.Suspense fallback={\"Loading...\"}>\n                        <UserBar />\n                    </React.Suspense>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}","import React, {useContext} from \"react\";\nimport {StateContext} from \"../Contexts\";\nimport {useResource} from \"react-request-hook\";\nimport handleDateCreated from \"../HandleDate\";\nimport { Link } from \"react-navi\";\nimport { Card } from 'react-bootstrap'\n\nexport default function ToDoItem({id, title, description, dateCreated, isComplete, dateComplete, short = false}) {\n    const {dispatch} = useContext(StateContext);\n\n    const [ ToDoItem, deleteToDoItem ] = useResource((id) => ({\n        url: `/ToDoItems/${encodeURI(id)}`,\n        method: 'delete'\n    }))\n\n    function handleDelete() {\n        deleteToDoItem((id))\n        dispatch({ type: \"DELETE_TODO\", id })\n    }\n\n    const [toggle, toggleToDo ] = useResource((id, isComplete, dateComplete) => ({\n        url: `/ToDoItems/${encodeURI(id)}`,\n        method: 'patch',\n        data: { isComplete, dateComplete }\n    }))\n\n\n\n    function handleToggle(){\n        if (!isComplete) {\n            dateComplete = handleDateCreated();\n        } else {}\n        dispatch({ type: \"TOGGLE_TODO\", id: id, isComplete: !isComplete });\n        toggleToDo(id, !isComplete, dateComplete);\n    }\n\n    let processedContent = description\n\n    if (short) {\n        if (description.length > 30) {\n            processedContent = description.substring(0, 30) + '...'\n        }\n    }\n\n\n    return (\n        <Card>\n        <Card.Body>\n            <Card.Title><Link href={`/todo/${id}`}><h3>{title}</h3></Link>\n            </Card.Title>\n            <Card.Text>\n            <div>{processedContent}</div>\n            <br />\n            <i>Created on {dateCreated}</i>\n            <div>\n                <label htmlFor=\"item-complete\">Complete:</label>\n                <input type=\"checkbox\" name=\"item-complete\" id=\"item-complete\" value=\"0\" checked={isComplete} onChange={(e) => {handleToggle();}}/>\n                <button onClick={(e) => {\n                    handleDelete();\n                }}>Delete Post</button>\n                {isComplete && <span style={{ color: \"blue\" }}><br/><i>Completed on: {dateComplete}</i><br/></span>}\n                {short &&\n                <div>\n                    <br />\n                    <Link href={`/todo/${id}`}>View Full Task</Link>\n                </div>\n                }\n            </div>\n            </Card.Text>\n        </Card.Body>\n        </Card>\n    );\n}","import React, {useContext} from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport {StateContext} from \"../Contexts\";\n\nexport default function ToDoList() {\n    const{state} = useContext(StateContext);\n    const{ToDoItems} = state;\n\n    return (\n        <div>\n            {ToDoItems.map((p, i) =>\n                <ToDoItem {...p} short={true} title={p.title} description={p.description} key={\"ToDoItem-\" + i} id={p.id}/>)}\n        </div>\n    );\n}","import {useResource} from \"react-request-hook\";\nimport {useContext, useEffect} from \"react\";\nimport ToDoList from \"../ToDos/ToDoList\";\nimport {StateContext} from \"../Contexts\";\n\nexport default function HomePage () {\n    const {state, dispatch} = useContext(StateContext)\n    const [ ToDoItems, getToDoItems ] = useResource(() => ({\n        url: '/todo',\n        method: 'get',\n        headers: {\"Authorization\": `${state.user.access_token}`}\n    }))\n\n    // useEffect(() =>{\n    //     if(state.user.access_token) {\n    //         getToDoItems()\n    //     }\n    // }, [])\n\n    useEffect(() =>{\n        getToDoItems()\n    }, [state.user.access_token])\n\n    useEffect(() => {\n        if (ToDoItems && ToDoItems.isLoading === false && ToDoItems.data) {\n            console.log(ToDoItems.data)\n            dispatch({ type: 'FETCH_POSTS', ToDoItems: ToDoItems.data.ToDoItems })\n        }\n    }, [ToDoItems])\n    const { data, isLoading } = ToDoItems;\n\n    return (\n        <>\n            {isLoading && 'Tasks are loading...'} <ToDoList/>\n        </>\n    )\n}","\nimport {useResource} from \"react-request-hook\";\nimport {useContext, useEffect} from \"react\";\nimport ToDoItem from \"../ToDos/ToDoItem\";\nimport {Link} from \"react-navi\";\nimport {StateContext} from \"../Contexts\";\n\nexport default function TodoPage ({ id }) {\n\n    const {state} = useContext(StateContext);\n\n    const [ toDoItem, getToDoItem ] = useResource(() => ({\n        url: `/todo/${id}`,\n        headers: {\"Authorization\": `${state.user.access_token}`},\n        method: 'get'\n    }))\n\n    useEffect(getToDoItem, [id])\n\n    return (\n        <div>\n            {(toDoItem && toDoItem.data)\n                ? <ToDoItem {...toDoItem.data} />\n                : 'Loading...'\n            }\n            <div><Link href=\"/\">Go back</Link></div>\n        </div>\n    )\n}","import React, {useEffect, useReducer} from \"react\";\nimport appReducer from './Reducers';\nimport { StateContext } from './Contexts';\nimport {Container} from \"react-bootstrap\";\nimport HeaderBar from \"./pages/HeaderBar\";\nimport HomePage from \"./pages/HomePage\";\nimport CreateToDoItem from \"./ToDos/CreateToDoItem\"\nimport {mount, route} from \"navi\";\nimport TodoPage from \"./pages/ToDoPage\";\nimport {Router, View } from \"react-navi\";\n\n\nfunction App() {\n\n    const [ state, dispatch ] = useReducer(appReducer, { user: {}, ToDoItems: [] })\n\n    const routes = mount({\n        '/': route({view: <HomePage/>}),\n        '/todo/create': route({view: <CreateToDoItem/>}),\n        '/todo/:id': route(req => {\n            return {view: <TodoPage id={req.params.id}/>}\n        }),\n    })\n\nreturn (\n      <div>\n        <StateContext.Provider value={{state: state, dispatch: dispatch}}>\n            <Router routes={routes}>\n                <Container>\n                    <HeaderBar/>\n                    <hr />\n                    <View />\n                </Container>\n            </Router>\n        </StateContext.Provider>\n      </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { RequestProvider } from 'react-request-hook'\nimport axios from 'axios'\n\nconst axiosInstance = axios.create({\n    baseURL: '/'\n})\n\nReactDOM.render(\n  <React.StrictMode>\n      <RequestProvider value={axiosInstance}>\n          <App />\n      </RequestProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","import React, {useContext} from \"react\";\nimport { StateContext } from '../Contexts';\n\n// export default function Logout() {\n//\n//     const {state, dispatch} = useContext(StateContext);\n//     const {user} = state;\n//\n//     return (\n//         <form\n//             onSubmit={(e) => {\n//                 e.preventDefault();\n//                 dispatch({ type: \"LOGOUT\" });\n//             }}\n//         >\n//             Logged in as: <b>{user.username}</b>\n//             <input type=\"submit\" value=\"Logout\" />\n//         </form>\n//     );\n// }\nexport default function Logout() {\n    const {state, dispatch} = useContext(StateContext)\n    const {user} = state;\n\n    return (\n        <form onSubmit={e => {e.preventDefault(); dispatch({type:\"LOGOUT\"}) } }>\n            Logged in as: <b>{user.username}</b>\n            <input type=\"submit\" value=\"Logout\" />\n        </form>\n    )\n}","import React from 'react'\n\nexport const StateContext = React.createContext({\n    state: {},\n    dispatch: () => {}\n})\n\n"],"sourceRoot":""}